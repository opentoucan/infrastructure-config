---
name: Trigger on pull_request (plan) and merge_group (apply) events with OpenTofu in matrix strategy.

on:
  pull_request:
  merge_group:

env:
  MONGODBATLAS_PUBLIC_KEY: ${{ secrets.MONGODB_ATLAS_PUBLIC_KEY }}
  MONGODBATLAS_PRIVATE_KEY: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}
  S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
  S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
  S3_BACKEND_URL: fsn1.your-objectstorage.com
  S3_REGION: fsn1

jobs:
  tf:
    runs-on: ubuntu-latest

    permissions:
      actions: read        # Required to identify workflow run.
      checks: write        # Required to add status summary.
      contents: read       # Required to checkout repository.
      pull-requests: write # Required to add comment and label.

    strategy:
      fail-fast: false
      matrix:
        deployment: [prod]

    environment: ${{ github.event_name == 'merge_group' && matrix.deployment || '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup TF
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_wrapper: false

      - name: Generate backend config
        run: |
          cat <<EOF >> opentofu/${{ matrix.deployment }}.tfbackend
          endpoints={s3="${S3_BACKEND_URL}" }
          region=${S3_REGION}
          bucket=opentoucan-tfstate
          access_key=${S3_ACCESS_KEY}
          secret_key=${S3_SECRET_KEY}

          EOF

      - name: Generate secret.tfvars
        run: |
          cat <<EOF >> opentofu/secret.tfvars
          mongodbatlas_public_key=${MONGODBATLAS_PUBLIC_KEY}
          mongodbatlas_private_key=${MONGODBATLAS_PRIVATE_KEY}
          s3_endpoint=${S3_BACKEND_URL}
          environment=${{ matrix.deployment }}

          EOF

      - name: Provision TF
        uses: op5dev/tf-via-pr@v13
        with:
          working-directory: opentofu
          command: ${{ github.event_name == 'merge_group' && 'apply' || 'plan' }}
          arg-backend-config: ${{ matrix.deployment }}.tfbackend
          arg-refresh: ${{ github.event_name == 'merge_group' && 'false' || 'true' }} # Skip refresh on apply.
          arg-lock: ${{ github.event_name == 'merge_group' }}
          arg-var-file: env/${{ matrix.deployment }}.tfvars,secret.tfvars
          arg-workspace: ${{ matrix.deployment }}
          plan-encrypt: ${{ secrets.PASSPHRASE }}
          plan-parity: true # Prevents stale apply within merge queue.
          tool: tofu
