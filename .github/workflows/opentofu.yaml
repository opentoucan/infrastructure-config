name: opentofu

on:
  push: 
    branches: [ 'main' ]
    paths:
      - 'opentofu/**'

env:
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  MONGODB_ATLAS_PUBLIC_KEY: ${{ secrets.MONGODB_ATLAS_PUBLIC_KEY }}
  MONGODB_ATLAS_PRIVATE_KEY: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}
  TF_VAR_teams: ${{ secrets.TF_VAR_TEAMS }}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      workspaces: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            mongo: opentofu/mongo/**
  ci:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.workspaces != '' }} && ${{ needs.changes.outputs.workspaces != '[]' }}
    strategy:
      matrix:
        workspace: ${{ fromJSON(needs.changes.outputs.workspaces) }}
    defaults:
      run:
        working-directory: opentofu/${{ matrix.workspace }}
    steps:
      - uses: actions/checkout@v3
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.6.1
          cli_config_credentials_hostname: 'sillock.scalr.io'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: OpenTofu fmt
        id: fmt
        run: tofu fmt -check
        continue-on-error: false

      - name: OpenTofu Init
        id: init
        run: tofu init

      - name: OpenTofu Validate
        id: validate
        run: tofu validate -no-color

      - name: OpenTofu Plan
        id: plan
        run: tofu plan -no-color

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: [changes, ci]
    if: ${{ needs.changes.outputs.workspaces != '' }} && ${{ needs.changes.outputs.workspaces != '[]' }}
    strategy:
      matrix:
        workspace: ${{ fromJSON(needs.changes.outputs.workspaces) }}
    defaults:
      run:
        working-directory: opentofu/${{ matrix.workspace }}
    steps:
      - uses: actions/checkout@v3
      - uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.6.1
          cli_config_credentials_hostname: 'sillock.scalr.io'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: OpenTofu Init
        id: init
        run: tofu init

      - name: OpenTofu Apply
        id: apply
        run: tofu apply -auto-approve -input=false