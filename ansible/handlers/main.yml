---
- name: Restart postgresql
  ansible.builtin.systemd:
    name: postgresql
    state: restarted

- name: Create Stanzas
  listen: reconfigure pgbackrest
  become: true
  become_user: "{{ pgbackrest_owner }}"
  ansible.builtin.command: pgbackrest --stanza={{ item.name }} stanza-create
  loop: "{{ pgbackrest_stanzas }}"
  loop_control:
    label: "{{ item.name }}"
  register: create_stanza
- name: Restore standby from backup
  when:
    - pgbackrest_stanzas | json_query('[*].extra."recovery-option"')
    - pgbackrest_restore_standby | bool
  block:
    - name: Stop database
      listen: reconfigure pgbackrest
      ansible.builtin.systemd:
        name: postgresql
        state: stopped

    - name: Restore standby
      listen: reconfigure pgbackrest
      become: true
      become_user: "{{ pgbackrest_owner }}"
      ansible.builtin.command: >
        pgbackrest
        --stanza={{ item.name }}
        --repo={{ item.restore_repo | default('1') }}
        --delta
        --type=standby restore
      loop: "{{ pgbackrest_stanzas }}"
      loop_control:
        label: "{{ item.name }}"
      register: restore_postgres
      changed_when: restore_postgres.rc != 0
      when:
        - "'recovery-option' in item.get('extra', {})"

    - name: Start database
      listen: reconfigure pgbackrest
      ansible.builtin.systemd:
        name: postgresql
        state: started

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true
