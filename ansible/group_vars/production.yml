---
postgresql_version: "17"
postgresql_options:
  - { name: listen_addresses, value: "*" }
  - { name: logging_collector, value: false }
  - { name: archive_mode, value: "on" }
  - { name: archive_command, value: "pgbackrest --stanza=backup archive-push %p" }
postgresql_databases: [production]
postgresql_users:
  - { db: production, name: postgres, password: "{{ lookup('ansible.builtin.env', 'POSTGRES_ADMIN_PASSWORD', default=undef()) }}" }
  - { db: production, name: user, password: "{{ lookup('ansible.builtin.env', 'POSTGRES_USER_PASSWORD', default=undef()) }}" }
  - { db: production, name: migrator, password: "{{ lookup('ansible.builtin.env', 'POSTGRES_MIGRATOR_PASSWORD', default=undef()) }}" }
postgresql_schemas:
  - { db: production, name: dotbot, owner: migrator }
postgresql_privs:
  - { db: production, roles: user, privs: "SELECT,INSERT,UPDATE", objs: ALL_IN_SCHEMA, schema: dotbot }
  - { db: production, roles: migrator, privs: ALL, type: schema, objs: "public,dotbot" }
postgresql_hba_entries:
  - { contype: host, databases: production, users: all, address: 0.0.0.0/0, method: scram-sha-256 }
postgresql_extensions:
  - { db: production, name: hstore }

pgbackrest_owner: postgres
pgbackrest_group: postgres
pgbackrest_local_postgresql: "{{ 'pg' in group_names }}"
# https://pgbackrest.org/user-guide.html#replication
pgbackrest_restore_standby: false
pgbackrest_services_install: true
pgbackrest_timer_enabled: true
pgbackrest_timer_random_delay: 0
pgbackrest_spool_path: /var/spool/pgbackrest
pgbackrest_async_archive: false
pgbackrest_async_archive_process_max: 2
pgbackrest_global_config:
  log-level-file: info
  log-level-console: info
  start-fast: y
  delta: y
pgbackrest_stanzas:
  - name: backup
    pg_config:
      # Local pg server
      - path: "/var/lib/postgresql/{{ postgresql_version }}/main"
    schedules:
      - backup_type: full
        oncalendar: "weekly"
      - backup_type: diff
        oncalendar: "daily"
    extra:
      backup-standby: "n"
pgbackrest_conf_extra: |
  [global:archive-push]
  compress-level=3
pgbackrest_repos:
  # Backup to S3
  - path: "/pgbackrest"
    retention-full: "7"
    retention-diff: "3"
    type: s3
    s3-bucket: pgbackrest
    s3-endpoint: minio:9000
    s3-region: us-west-1
    s3-key: "{{ lookup('ansible.builtin.env', 'S3_BACKUP_KEY', default=undef()) }}"
    s3-key-secret: "{{ lookup('ansible.builtin.env', 'S3_BACKUP_SECRET', default=undef()) }}"
    s3-uri-style: path
    storage-verify-tls: n
