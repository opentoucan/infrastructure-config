---
- name: Install scripts
  ansible.builtin.template:
    src: pgbackrest-backup.sh.j2
    dest: "/usr/local/bin/pgbackrest-{{ cluster_name }}-{{ backup_type }}-repo{{ repo }}"
    owner: root
    group: root
    mode: "0755"
  vars:
    cluster_name: "{{ item.0.name }}"
    backup_type: "{{ item.1.backup_type }}"
  loop: "{{ pgbackrest_stanzas | subelements('schedules', skip_missing=True) }}"
  loop_control:
    label: "{{ cluster_name }}-{{ backup_type }}-repo{{ repo }}"

- name: Install services
  ansible.builtin.template:
    src: pgbackrest.service.j2
    dest: "/etc/systemd/system/pgbackrest-{{ cluster_name }}-{{ backup_type }}-repo{{ repo }}.service"
    owner: root
    group: root
    mode: "0644"
  vars:
    cluster_name: "{{ item.0.name }}"
    backup_type: "{{ item.1.backup_type }}"
  loop: "{{ pgbackrest_stanzas | subelements('schedules', skip_missing=True) }}"
  loop_control:
    label: "{{ cluster_name }}-{{ backup_type }}-repo{{ repo }}"
  notify: reload systemd

- name: Install timers
  ansible.builtin.template:
    src: pgbackrest.timer.j2
    dest: "/etc/systemd/system/pgbackrest-{{ cluster_name }}-{{ backup_type }}-repo{{ repo }}.timer"
    owner: root
    group: root
    mode: "0644"
  vars:
    cluster_name: "{{ item.0.name }}"
    backup_type: "{{ item.1.backup_type }}"
    oncalendar: "{{ item.1.oncalendar }}"
  loop: "{{ pgbackrest_stanzas | subelements('schedules', skip_missing=True) }}"
  loop_control:
    label: "{{ cluster_name }}-{{ backup_type }}-repo{{ repo }}"
  register: __installed_timers
  notify: reload systemd

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Configure timer states
  ansible.builtin.systemd:
    cluster_name: "{{ name }}"
    state: "{{ 'started' if pgbackrest_timer_enabled else 'stopped' }}"
    enabled: "{{ pgbackrest_timer_enabled }}"
  vars:
    # item.invocation.dest in check mode
    cluster_name: "{{ item.dest | default(item.invocation.dest) | basename }}"
  loop: "{{ __installed_timers.results }}"
  loop_control:
    label: "{{ cluster_name }}"
  when:
    - __installed_timers is defined
    - item.dest is defined or item.invocation.dest is defined
